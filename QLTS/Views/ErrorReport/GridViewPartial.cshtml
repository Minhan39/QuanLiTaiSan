@model List<QLTS.Models.ErrorReportModel>

@{
    var gridView = Html.DevExpress().GridView(gridViewSettings =>
    {
    gridViewSettings.Name = "gridView";
    gridViewSettings.KeyFieldName = "Id";

    gridViewSettings.CallbackRouteValues = new { Controller = "ErrorReport", Action = "GridViewPartial" };
    gridViewSettings.CustomActionRouteValues = new { Controller = "ErrorReport", Action = "GridViewCustomActionPartial" };
    gridViewSettings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ErrorReport", Action = "GridViewUpdatePartial" };

    gridViewSettings.EnablePagingGestures = AutoBoolean.False;

    gridViewSettings.ControlStyle.CssClass = "grid-view";
    gridViewSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

    gridViewSettings.Styles.Cell.Wrap = DefaultBoolean.False;
    gridViewSettings.Styles.PagerBottomPanel.CssClass = "pager";
    gridViewSettings.Styles.FocusedRow.CssClass = "focused";

    gridViewSettings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;
    gridViewSettings.SettingsResizing.Visualization = ResizingMode.Live;

    gridViewSettings.SettingsBehavior.ProcessColumnMoveOnClient = true;
    gridViewSettings.SettingsBehavior.ColumnMoveMode = GridColumnMoveMode.AmongSiblings;

    gridViewSettings.SettingsBehavior.AllowFocusedRow = true;
    gridViewSettings.SettingsBehavior.AllowSelectByRowClick = true;
    gridViewSettings.SettingsBehavior.AllowEllipsisInText = true;
    gridViewSettings.SettingsBehavior.AllowDragDrop = true;

    gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";

    gridViewSettings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
    gridViewSettings.SettingsEditing.EditFormColumnCount = 2;

    gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";

    gridViewSettings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
    gridViewSettings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
    gridViewSettings.Settings.ShowHeaderFilterButton = true;

    gridViewSettings.SettingsPager.PageSize = 15;
    gridViewSettings.SettingsPager.EnableAdaptivity = true;
    gridViewSettings.SettingsPager.PageSizeItemSettings.Visible = true;

    gridViewSettings.SettingsExport.EnableClientSideExportAPI = true;
    gridViewSettings.SettingsExport.ExportSelectedRowsOnly = true;

    gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
    gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
    gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;
    gridViewSettings.SettingsText.PopupEditFormCaption = "Biểu mẫu";
    gridViewSettings.SettingsText.CommandUpdate = "Lưu";
    gridViewSettings.SettingsText.CommandCancel = "Huỷ";
    gridViewSettings.SettingsPager.PageSizeItemSettings.Caption = "Kích cỡ";
    gridViewSettings.SettingsPager.Summary.Text = "Trang {0} / {1} ({2:n0} bản ghi)";

    gridViewSettings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    gridViewSettings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;
    gridViewSettings.EditFormLayoutProperties.ColCount = 2;
    gridViewSettings.EditFormLayoutProperties.Items.Add("AssetDetailId");
    gridViewSettings.EditFormLayoutProperties.Items.Add("RoomId");
    gridViewSettings.EditFormLayoutProperties.Items.Add("AtRepair");

    gridViewSettings.EditFormLayoutProperties.Items.AddCommandItem(itemSettings =>
    {
        itemSettings.ColumnSpan = 2;
        itemSettings.HorizontalAlign = FormLayoutHorizontalAlign.Right;
    });

    gridViewSettings.CommandColumn.Visible = true;
    gridViewSettings.CommandColumn.ShowSelectCheckbox = true;
    gridViewSettings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
    gridViewSettings.CommandColumn.VisibleIndex = 0;
    gridViewSettings.CommandColumn.Width = System.Web.UI.WebControls.Unit.Pixel(52);

    gridViewSettings.Columns.Add(columnSettings =>
    {
        columnSettings.FieldName = "Id";
        columnSettings.Caption = "Mã";
        columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(75);
        columnSettings.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    });

    gridViewSettings.Columns.Add(columnSettings=>
    {
        columnSettings.FieldName = "Step";
        columnSettings.Caption = "Trạng thái";
        columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(100);
        columnSettings.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        columnSettings.EditorProperties().ComboBox(comboBoxProperties =>
        {
            comboBoxProperties.Items.Add("Mới", 1);
            comboBoxProperties.Items.Add("Mới", 2);
            comboBoxProperties.Items.Add("Đang xử lý", 3);
            comboBoxProperties.Items.Add("Hoàn tất", 4);
        });
        columnSettings.SetDataItemTemplateContent(c =>
        {
            var status = (int)DataBinder.Eval(c.DataItem, "Step");
            var statusIcon = "<i class='fas fa-spinner fa-pulse'></i>";
            if (status == 3)
            {
                statusIcon = "<i class='fas fa-hammer fa-spin'></i>";
            }
            if(status == 4)
            {
                statusIcon = "<i class='far fa-thumbs-up'></i>";
            }
            ViewContext.Writer.Write(string.Format("{0}", statusIcon));
        });
    });

    gridViewSettings.Columns.Add(c =>
    {
        c.FieldName = "Image";
        c.Caption = "Hình ảnh";
        c.Visible = false;
        c.EditorProperties().BinaryImage(p =>
        {
            p.ImageHeight = 170;
            p.ImageWidth = 160;
            p.EnableServerResize = true;
            p.ImageSizeMode = ImageSizeMode.FitProportional;
            p.CallbackRouteValues = new { Action = "BinaryImageColumnPhotoUpdate", Controller = "Asset" };
            p.EditingSettings.Enabled = true;
            p.EditingSettings.UploadSettings.UploadValidationSettings.MaxFileSize = 4194304;
        });
        c.Width = System.Web.UI.WebControls.Unit.Pixel(200);
    });
    gridViewSettings.Columns.Add(columnSettings =>
    {
        columnSettings.FieldName = "AssetDetailId";
        columnSettings.Caption = "Tài sản";
        columnSettings.Visible = false;
        columnSettings.ColumnType = MVCxGridViewColumnType.ComboBox;

        var comboBoxProperties = columnSettings.PropertiesEdit as ComboBoxProperties;
        comboBoxProperties.ValueField = "Id";
        comboBoxProperties.TextField = "DefinitionId";
        comboBoxProperties.ValueType = typeof(long);
        comboBoxProperties.DataSource = QLTS.Models.AssetDetailHelper.GetAssetDetails();
    });
    gridViewSettings.Columns.Add(columnSettings =>
    {
        columnSettings.FieldName = "StaffId";
        columnSettings.Caption = "Người báo cáo";
        columnSettings.Visible = false;
        columnSettings.ColumnType = MVCxGridViewColumnType.ComboBox;

        var comboBoxProperties = columnSettings.PropertiesEdit as ComboBoxProperties;
        comboBoxProperties.ValueField = "Id";
        comboBoxProperties.TextField = "StaffId";
        comboBoxProperties.ValueType = typeof(long);
        comboBoxProperties.DataSource = QLTS.Models.StaffHelper.GetStaffs();
    });
    gridViewSettings.Columns.Add(columnSettings =>
    {
        columnSettings.FieldName = "RoomId";
        columnSettings.Caption = "Phòng";
        columnSettings.Visible = false;
        columnSettings.ColumnType = MVCxGridViewColumnType.ComboBox;

        var comboBoxProperties = columnSettings.PropertiesEdit as ComboBoxProperties;
        comboBoxProperties.ValueField = "Id";
        comboBoxProperties.TextField = "Name";
        comboBoxProperties.ValueType = typeof(long);
        comboBoxProperties.DataSource = QLTS.Models.RoomHelper.GetRooms();
    });
    gridViewSettings.Columns.Add(columnSettings =>
    {
        columnSettings.FieldName = "Asset.Name";
        columnSettings.Caption = "Tài sản";
        columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(200);
    });
    gridViewSettings.Columns.Add(columnSettings =>
    {
        columnSettings.FieldName = "StaffName";
        columnSettings.UnboundType = DevExpress.Data.UnboundColumnType.String;
        columnSettings.UnboundExpression = "[Staff.Firstname] + ' ' + [Staff.Lastname] + ' (' + [Staff.StaffId] + ')'";
        columnSettings.Caption = "Người báo cáo";
        columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(200);
    });
@*        gridViewSettings.CustomUnboundColumnData = (sender, e) =>
        {
            e.Value = String.Join(" / ", e.GetListSourceFieldValue("Staff.Firstname"), e.GetListSourceFieldValue("Staff.Lastname"));
        };*@
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "Room.Name";
            columnSettings.Caption = "Phòng";
            columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(150);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.Visible = false;
            columnSettings.FieldName = "Message";
            columnSettings.Caption = "Ghi chú";
            columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(400);
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "AtReport";
            columnSettings.Caption = "Ngày báo";
            columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(125);
            columnSettings.PropertiesEdit.DisplayFormatString = "d";
            columnSettings.ColumnType = MVCxGridViewColumnType.DateEdit;
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "AtReciver";
            columnSettings.Caption = "Ngày tiếp nhận";
            columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(125);
            columnSettings.PropertiesEdit.DisplayFormatString = "d";
            columnSettings.ColumnType = MVCxGridViewColumnType.DateEdit;
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "AtRepair";
            columnSettings.Caption = "Ngày sửa chữa";
            columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(125);
            columnSettings.PropertiesEdit.DisplayFormatString = "d";
            columnSettings.ColumnType = MVCxGridViewColumnType.DateEdit;
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "AtEnd";
            columnSettings.Caption = "Ngày hoàn thành";
            columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(125);
            columnSettings.PropertiesEdit.DisplayFormatString = "d";
            columnSettings.ColumnType = MVCxGridViewColumnType.DateEdit;
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "AtCreate";
            columnSettings.Caption = "Ngày tạo";
            columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(125);
            columnSettings.PropertiesEdit.DisplayFormatString = "d";
        });
        gridViewSettings.Columns.Add(columnSettings =>
        {
            columnSettings.FieldName = "AtUpdate";
            columnSettings.Caption = "Ngày chỉnh sửa";
            columnSettings.Width = System.Web.UI.WebControls.Unit.Pixel(125);
            columnSettings.PropertiesEdit.DisplayFormatString = "d";
        });
        gridViewSettings.ClientSideEvents.Init = "onGridViewInit";
        gridViewSettings.ClientSideEvents.SelectionChanged = "onGridViewSelectionChanged";
        gridViewSettings.ClientSideEvents.BeginCallback = "onGridViewBeginCallback";

        gridViewSettings.CellEditorInitialize = (s, e) =>
        {
            ((ASPxEdit)e.Editor).ValidationSettings.Display = Display.Dynamic;
        };
        gridViewSettings.ClientSideEvents.FocusedRowChanged = "OnGridFocusedRowChanged";
    });
    if (ViewBag.GeneralError != null)
    {
        gridView.SetEditErrorText(ViewBag.GeneralError);
    }
}

@gridView.Bind(Model).GetHtml()
