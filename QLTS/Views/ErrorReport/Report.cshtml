@model QLTS.Models.ErrorReportModel

@{
    Layout = "~/Views/Shared/_LayoutDevexpress.cshtml";
}

@section Head {
    <script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <style type="text/css">
        .formLayout {
            max-width: 1300px;
            margin: auto;
        }
    </style>
}
@{ 
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

<div class="formLayout">
    @if (ViewBag.ListErrorReport != null)
    {
        <div style="padding-left: 24px;">
            <h2 style="padding-left: 12px;">Các báo cáo của bạn</h2>
            @foreach (QLTS.Models.ErrorReportModel item in ViewBag.ListErrorReport)
            {
                <p style="font-size: 12px;">Mã báo cáo: <a href="@Url.Action("Progress", "ErrorReport", new { reportId = item.Id, email = item.Staff.Email })">@item.Id (Xem thêm)</a> - Tài sản: @item.AssetDetail.Asset.Name - Ngày báo cáo: @item.AtReport</p>
            }
        </div>
    }
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FormLayout1";
    settings.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    settings.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 700;
    settings.ControlStyle.CssClass = "formLayout";

    var groupItem = settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "Báo lỗi thiết bị";
        groupSettings.ColCount = 1;
        groupSettings.UseDefaultPaddings = false;
        groupSettings.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(10);
        groupSettings.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        groupSettings.GroupBoxStyle.Caption.Font.Bold = true;
        groupSettings.GroupBoxStyle.Caption.Font.Size = 16;

        groupSettings.Items.Add(model => model.AssetDetailId, item =>
        {
            item.Caption = "Mã tài sản";
            item.NestedExtension().TextBox(s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.Display = Display.Dynamic;
            });
        });

        groupSettings.Items.Add(model => model.Image, item =>
        {
            item.Caption = "Hình ảnh";
            item.NestedExtension().BinaryImage(s =>
            {
                s.Properties.ImageHeight = 170;
                s.Properties.ImageWidth = 160;
                s.Properties.EnableServerResize = true;
                s.Properties.ImageSizeMode = ImageSizeMode.FitProportional;
                s.CallbackRouteValues = new { Action = "BinaryImageColumnPhotoUpdate", Controller = "ErrorReport" };
                s.Properties.EditingSettings.Enabled = true;
                s.Properties.EditingSettings.UploadSettings.UploadValidationSettings.MaxFileSize = 4194304;
            });
        });

        groupSettings.Items.Add(model => model.Message, item =>
        {
            item.Caption = "Mô tả lỗi";
            item.NestedExtension().Memo(s =>
            {
                s.ShowModelErrors = true;
                s.Properties.Rows = 9;
                s.Properties.ValidationSettings.Display = Display.Dynamic;
            });
        });

        groupSettings.Items.Add(i =>
        {
            i.ShowCaption = DefaultBoolean.False;
            i.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        }).SetNestedContent(() =>
        {
            ViewContext.Writer.Write("<table><tr><td style=\"padding-right:10px;\">");

            Html.DevExpress().Button(s =>
            {
                s.Name = "Submit";
                s.Width = System.Web.UI.WebControls.Unit.Pixel(100);
                s.Text = "Gửi";
                s.UseSubmitBehavior = true;
            }).Render();

            ViewContext.Writer.Write("</td></tr></table>");
        });
    });

    groupItem.SettingsItems.ShowCaption = DefaultBoolean.True;
    groupItem.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Left;

    groupItem.SettingsItemHelpTexts.Position = HelpTextPosition.Auto;

}).GetHtml()
}

